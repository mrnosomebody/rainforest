openapi: 3.0.3
info:
  title: Rainforest E-commerce API
  version: 1.0.0
  description: Документация к API для проекта Rainforest E-commerce.
paths:
  /api/v1/orders/:
    get:
      operationId: orders_list
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - orders
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrderReadList'
          description: ''
    post:
      operationId: orders_create
      description: Создание нового заказа с rate limiting 5 запросов в минуту.
      tags:
      - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderCreate'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderRead'
          description: ''
  /api/v1/orders/{id}/:
    get:
      operationId: orders_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this order.
        required: true
      tags:
      - orders
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderRead'
          description: ''
    put:
      operationId: orders_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this order.
        required: true
      tags:
      - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderUpdate'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderUpdate'
          description: ''
    patch:
      operationId: orders_partial_update
      description: Частичное обновление заказа (например, отмена заказа).
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this order.
        required: true
      tags:
      - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrderUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrderUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrderUpdate'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderRead'
          description: ''
    delete:
      operationId: orders_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this order.
        required: true
      tags:
      - orders
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/products/:
    get:
      operationId: products_list
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - products
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductReadList'
          description: ''
    post:
      operationId: products_create
      tags:
      - products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductCreate'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCreate'
          description: ''
  /api/v1/products/{id}/:
    get:
      operationId: products_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this product.
        required: true
      tags:
      - products
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductRead'
          description: ''
    put:
      operationId: products_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this product.
        required: true
      tags:
      - products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductUpdate'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductUpdate'
          description: ''
    patch:
      operationId: products_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this product.
        required: true
      tags:
      - products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProductUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProductUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProductUpdate'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductUpdate'
          description: ''
    delete:
      operationId: products_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this product.
        required: true
      tags:
      - products
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/reports/get_report:
    get:
      operationId: reports_get_report_retrieve
      description: Запускает генерацию отчёта и возвращает task_id.
      tags:
      - reports
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportResult'
          description: ''
  /api/v1/reports/status/:
    get:
      operationId: reports_status_retrieve
      description: Возвращает статус и результат задачи по task_id.
      tags:
      - reports
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportResult'
          description: ''
  /api/v1/schema/:
    get:
      operationId: schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - ug
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - schema
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
components:
  schemas:
    OrderCreate:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItemCreate'
      required:
      - items
    OrderItemCreate:
      type: object
      properties:
        product_id:
          type: string
          format: uuid
        quantity:
          type: integer
          minimum: 1
      required:
      - product_id
      - quantity
    OrderItemRead:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        product:
          type: string
          format: uuid
          readOnly: true
        product_name:
          type: string
          readOnly: true
        quantity:
          type: integer
          readOnly: true
        price_at_purchase:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          readOnly: true
      required:
      - id
      - price_at_purchase
      - product
      - product_name
      - quantity
    OrderRead:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        paid_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItemRead'
          readOnly: true
      required:
      - created_at
      - id
      - items
      - paid_at
      - status
      - updated_at
    OrderUpdate:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/StatusEnum'
    PaginatedOrderReadList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/OrderRead'
    PaginatedProductReadList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProductRead'
    PatchedOrderUpdate:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/StatusEnum'
    PatchedProductUpdate:
      type: object
      properties:
        name:
          type: string
          maxLength: 200
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        cost:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        description:
          type: string
        stock:
          type: integer
          maximum: 2147483647
          minimum: 0
        hidden:
          type: boolean
    ProductCreate:
      type: object
      properties:
        name:
          type: string
          maxLength: 200
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        cost:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        description:
          type: string
        stock:
          type: integer
          maximum: 2147483647
          minimum: 0
      required:
      - cost
      - name
      - price
    ProductRead:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          readOnly: true
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          readOnly: true
        cost:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          readOnly: true
        description:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        stock:
          type: integer
          readOnly: true
      required:
      - cost
      - created_at
      - description
      - id
      - name
      - price
      - stock
      - updated_at
    ProductUpdate:
      type: object
      properties:
        name:
          type: string
          maxLength: 200
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        cost:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        description:
          type: string
        stock:
          type: integer
          maximum: 2147483647
          minimum: 0
        hidden:
          type: boolean
      required:
      - cost
      - name
      - price
    ReportResult:
      type: object
      properties:
        status:
          type: string
        result:
          nullable: true
      required:
      - status
    StatusEnum:
      enum:
      - pending
      - completed
      - canceled
      type: string
      description: |-
        * `pending` - Pending
        * `completed` - Completed
        * `canceled` - Canceled
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
